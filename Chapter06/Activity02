#include <iostream>

using namespace std;

// 기본 클래스 Figure
class Figure
{
public:
  virtual void area() = 0;  // 면적 (순수 가상 함수)
  virtual void around() = 0;  // 둘레 (순수 가상 함수)
  void GetMeasure()
  {
    area();
    around();
  }
};

// 파생 클래스 Square
class Square : public Figure
{
public:
  Square(double s);
  Square(double s, double h);
  void area()
  {
    cout << "사각형의 면적 : " << side * height << endl;
  }
  void around()
  {
    cout << "사각형의 둘레 : " << 2 * (side + height) << endl;
  }

private:
  double side;
  double height;
};

// Square 클래스의 생성자
Square::Square(double s)
{
  side = height = s;
}

Square::Square(double s, double h)
{
  side = s;
  height = h;
}

// 파생 클래스 Circle
class Circle : public Figure
{
public:
  Circle(double r);
  void area()
  {
    cout << "원의 면적 : " << radius * radius * pi << endl;
  }
  void around()
  {
    cout << "원의 둘레 : " << 2 * (radius * pi) << endl;
  }

private:
  const double pi;
  double radius;
};

// Circle 클래스의 생성자
Circle::Circle(double r) : pi(3.14)
{
  radius = r;
}

int main()
{
  Figure *pFig1;
  Figure *pFig2;
  Figure *pFig3;
  Square mySquare1(2.5);
  Square mySquare2(2.3, 3.7);
  Circle myCircle(3.6);

  pFig1 = &mySquare1;
  pFig2 = &mySquare2;
  pFig3 = &myCircle;

  pFig1->GetMeasure();
  pFig2->GetMeasure();
  pFig3->GetMeasure();
}
